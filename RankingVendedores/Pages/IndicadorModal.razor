@inject IndicadorViewModel ViewModel
@inject ISnackbar Snackbar
@using Aplicacao.Utils
@using MudBlazor
@using Ranking.Aplicacao.DTOs

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">@((ViewModel.IndicadorSelecionado?.Id ?? 0) == 0 ? "Novo Indicador" : "Editar Indicador")</MudText>

        <MudTextField @bind-Value="ViewModel.IndicadorSelecionado.Nome"
                      Label="Nome"
                      Required="true"
                      RequiredError="O nome é obrigatório." />

        <MudTextField @bind-Value="ViewModel.IndicadorSelecionado.Descricao"
                      Label="Descrição"
                      Required="true"
                      RequiredError="A descrição é obrigatória." />

        <MudSelect T="TipoIndicador" @bind-Value="ViewModel.IndicadorSelecionado.Tipo"
                   Label="Tipo"
                   Required="true"
                   RequiredError="O tipo é obrigatório">
            @foreach (TipoIndicador tipo in Enum.GetValues(typeof(TipoIndicador)))
            {
                <MudSelectItem Value="@tipo">@tipo</MudSelectItem>
            }
        </MudSelect>

        <ErroValidacao ViewModel="ViewModel" />
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancelar" Color="Color.Secondary">Cancelar</MudButton>
        <MudButton OnClick="SalvarAsync" Color="Color.Primary" Variant="Variant.Filled">Salvar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    public IMudDialogInstance MudDialog { get; set; } = default!;

    private void Cancelar() => MudDialog.Cancel();

    private async Task SalvarAsync()
    {
        ResultadoOperacao resultado;

        if (ViewModel.IndicadorSelecionado.Id == 0)
        {
            var dto = new CriarIndicadorDto
            {
                Nome = ViewModel.IndicadorSelecionado.Nome,
                Descricao = ViewModel.IndicadorSelecionado.Descricao,
                Tipo = ViewModel.IndicadorSelecionado.Tipo
            };

            resultado = await ViewModel.CriarIndicadorAsync(dto);
        }
        else
        {
            var dto = new AtualizarIndicadorDto
            {
                Id = ViewModel.IndicadorSelecionado.Id,
                Nome = ViewModel.IndicadorSelecionado.Nome,
                Descricao = ViewModel.IndicadorSelecionado.Descricao,
                Tipo = ViewModel.IndicadorSelecionado.Tipo
            };

            resultado = await ViewModel.AtualizarIndicadorAsync(dto);
        }

        if (resultado.Sucesso)
            MudDialog.Close(DialogResult.Ok(ViewModel.IndicadorSelecionado));
        else
            Snackbar.Add(resultado.Mensagem ?? "Erro ao salvar indicador", Severity.Error);
    }
}
