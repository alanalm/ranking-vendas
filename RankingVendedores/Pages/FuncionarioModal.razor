@inject FuncionarioViewModel ViewModel
@using Aplicacao.Utils
@using MudBlazor
@using RankingVendedores.ViewModels
@using Ranking.Aplicacao.DTOs

<MudDialog>
    <DialogContent>
        <MudTextField Label="Nome" @bind-Value="Funcionario.Nome" />
       <ErroValidacao ViewModel="ViewModel" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="SalvarAsync" Color="Color.Primary">Salvar</MudButton>
        <MudButton OnClick="Cancelar">Cancelar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public IMudDialogInstance MudDialog { get; set; }

    [Parameter] public FuncionarioDto Funcionario { get; set; }

    [Parameter] public bool ModoEdicao { get; set; }

    private async Task SalvarAsync()
    {
        ResultadoOperacao<FuncionarioDto> resultado;

        if (ModoEdicao)
        {
            var dto = new AtualizarFuncionarioDto
            {
                Id = Funcionario.Id,
                Nome = Funcionario.Nome
            };
            resultado = await ViewModel.AtualizarFuncionarioAsync(dto);
        }
        else
        {
            var dto = new CriarFuncionarioDto
            {
                Nome = Funcionario.Nome
            };
            resultado = await ViewModel.CriarFuncionarioAsync(dto);
        }

        if (resultado.Sucesso)
        {
            MudDialog.Close(DialogResult.Ok(resultado.Dados));
        }
    }


    private void Cancelar()
    {
        MudDialog.Cancel();
    }
}